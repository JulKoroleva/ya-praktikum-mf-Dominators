services:
    client:
        container_name: dominators-client
        image: dominators-client
        build:
            context: .
            dockerfile: Dockerfile.client
            args:
                CLIENT_PORT: ${CLIENT_PORT}
                SERVER_PORT: ${SERVER_PORT}
        restart: always
        ports:
            - "${CLIENT_PORT}:${CLIENT_PORT}"
        environment:
            - INTERNAL_SERVER_URL=${INTERNAL_SERVER_URL}
            - EXTERNAL_SERVER_URL=${EXTERNAL_SERVER_URL}
            - NODE_ENV=production
        env_file:
            - .env 
        networks:
            - awesome

    server:
        container_name: dominators-server
        image: dominators-server
        build:
            context: .
            dockerfile: Dockerfile.server
            args:
                SERVER_PORT: ${SERVER_PORT}
        depends_on:
            - postgres
        ports:
            - "${SERVER_PORT}:${SERVER_PORT}"
        env_file:
            - .env 
        networks:
            - awesome

    postgres:
        image: postgres:14
        ports:
            - "${POSTGRES_PORT}:${POSTGRES_PORT}"
        env_file:
            - .env 
        volumes:
            - postgresdata:/var/lib/postgresql/data
        restart: always
        networks:
            - awesome
    pgadmin:
        container_name: pgadmin
        image: dpage/pgadmin4:4.18
        restart: always
        env_file:
            - .env
        ports:
            - "8080:80"
        volumes:
            - pgadmin-data:/var/lib/pgadmin
        depends_on:
            - postgres
        networks:
            - awesome

volumes:
    postgresdata:
    pgadmin-data:
networks:
    awesome:
        driver: bridge 
